{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Parameters":{
      "VPCCIDRValue":{
         "Default":"10.50.",
         "Description":"ONLY first 2 octates of CIDR value for VPC which you want to create.",
         "Type":"String",
         "MinLength":"1",
         "MaxLength":"8",
         "AllowedPattern":"[0-9-.-/-]*",
         "ConstraintDescription":"must contain only numbers, dot and slash(/)."
      },
      "DBUsername":{
         "Default":"htadmin",
         "Description":"Username of mysql and influxdb Database.",
         "Type":"String",
         "NoEcho":"true"
      },
      "DBPassword":{
         "Description":"Password of mysql and influxdb  Database.",
         "Type":"String",
         "NoEcho":"true"
      }
   },
   "Resources":{
      "myInternetGateway":{
         "Type":"AWS::EC2::InternetGateway",
         "Properties":{
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Ref":"AWS::StackName"
                           },
                           "IG"
                        ]
                     ]
                  }
               }
            ]
         }
      },
      "AttachGateway":{
         "Type":"AWS::EC2::VPCGatewayAttachment",
         "Properties":{
            "VpcId":{
               "Ref":"myVPC"
            },
            "InternetGatewayId":{
               "Ref":"myInternetGateway"
            }
         }
      },
      "RouteTable":{
         "Type":"AWS::EC2::RouteTable",
         "Properties":{
            "VpcId":{
               "Ref":"myVPC"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Ref":"AWS::StackName"
                           },
                           "RouteTable"
                        ]
                     ]
                  }
               }
            ]
         }
      },
      "myRoute":{
         "Type":"AWS::EC2::Route",
         "DependsOn":"AttachGateway",
         "Properties":{
            "RouteTableId":{
               "Ref":"RouteTable"
            },
            "DestinationCidrBlock":"0.0.0.0/0",
            "GatewayId":{
               "Ref":"myInternetGateway"
            }
         }
      },
      "mySubnetRouteTableAssociation":{
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{
            "SubnetId":{
               "Ref":"mySubnet"
            },
            "RouteTableId":{
               "Ref":"RouteTable"
            }
         }
      },
      "myVPC":{
         "Type":"AWS::EC2::VPC",
         "Properties":{
            "CidrBlock":{
               "Fn::Join":[
                  "",
                  [
                     {
                        "Ref":"VPCCIDRValue"
                     },
                     "0.0/16"
                  ]
               ]
            },
            "EnableDnsSupport":"true",
            "EnableDnsHostnames":"true",
            "InstanceTenancy":"default",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Ref":"AWS::StackName"
                           },
                           "VPC"
                        ]
                     ]
                  }
               }
            ]
         }
      },
      "mySubnet":{
         "Type":"AWS::EC2::Subnet",
         "Properties":{
            "VpcId":{
               "Ref":"myVPC"
            },
            "CidrBlock":{
               "Fn::Join":[
                  "",
                  [
                     {
                        "Ref":"VPCCIDRValue"
                     },
                     "1.0/24"
                  ]
               ]
            },
            "AvailabilityZone":"us-east-1b",
            "MapPublicIpOnLaunch":"true",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Ref":"AWS::StackName"
                           },
                           "Subnet"
                        ]
                     ]
                  }
               }
            ]
         }
      },
      "myStack":{
         "Type":"AWS::OpsWorks::Stack",
         "Properties":{
            "ConfigurationManager":{
               "Name":"Chef",
               "Version":"12"
            },
            "Name":{
               "Ref":"AWS::StackName"
            },
            "ServiceRoleArn":{
               "Fn::Join":[
                  "",
                  [
                     "arn:aws:iam::",
                     {
                        "Ref":"AWS::AccountId"
                     },
                     ":role/aws-opsworks-service-role"
                  ]
               ]
            },
            "DefaultInstanceProfileArn":{
               "Fn::Join":[
                  "",
                  [
                     "arn:aws:iam::",
                     {
                        "Ref":"AWS::AccountId"
                     },
                     ":instance-profile/aws-ec2-instance-role"
                  ]
               ]
            },
            "Attributes":{
               "Color":"rgb(45, 114, 184)"
            },
            "UseOpsworksSecurityGroups":"true",
            "DefaultRootDeviceType":"ebs",
            "DefaultOs":"Amazon Linux 2017.09",
            "AgentVersion":"LATEST",
            "UseCustomCookbooks":"true",
            "CustomCookbooksSource":{
               "Revision":"master",
               "Type":"git",
               "Url":"https://github.com/mjoshi89/targaryen"
            },
            "VpcId":{
               "Ref":"myVPC"
            },
            "DefaultSubnetId":{
               "Ref":"mySubnet"
            }
         }
      },
      "commonApp":{
         "Type":"AWS::OpsWorks::App",
         "Properties":{
            "StackId":{
               "Ref":"myStack"
            },
            "Type":"other",
            "Environment":[
               {
                  "Key":"DBUsername",
                  "Value":{
                     "Ref":"DBUsername"
                  },
                  "Secure":"true"
               },
               {
                  "Key":"DBPassword",
                  "Value":{
                     "Ref":"DBPassword"
                  },
                  "Secure":"true"
               }
            ],
            "Name":"common",
            "Shortname":"common"
         }
      },
      "wordpressLayer":{
         "Type":"AWS::OpsWorks::Layer",
         "Properties":{
            "StackId":{
               "Ref":"myStack"
            },
            "Type":"custom",
            "Shortname":"wordpressandmonitoring",
            "EnableAutoHealing":"true",
            "AutoAssignElasticIps":"false",
            "AutoAssignPublicIps":"true",
            "CustomRecipes":{
              "Setup" : ["common::wordpress_deploy", "common::monitoring_dashboard_deploy","common::monitoring_agent_telegraf_deploy" ]
            },
            "CustomSecurityGroupIds":[
               {
                  "Ref":"wordpressSecurityGroup"
               },
               {
                  "Ref":"monitoringSecurityGroup"
               },
               {
                  "Fn::GetAtt":[
                     "myVPC",
                     "DefaultSecurityGroup"
                  ]
               }
            ],
            "Name":"WordpressAndMonitoring"
         }
      },
      "wordpressSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Wordpress Security Group",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Ref":"myStack"
                           },
                           "Wordpress-sggroup"
                        ]
                     ]
                  }
               }
            ],
            "VpcId":{
               "Ref":"myVPC"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"8080",
                  "ToPort":"8080",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"8080",
                  "ToPort":"8080",
                  "CidrIpv6":"::/0"
               }
            ]
         }
      },
      "wordpressInstance":{
         "Type":"AWS::OpsWorks::Instance",
         "Properties":{
            "Architecture":"x86_64",
            "EbsOptimized":"false",
            "RootDeviceType":"ebs",
            "StackId":{
               "Ref":"myStack"
            },
            "LayerIds":[
               {
                  "Ref":"wordpressLayer"
               }
            ],
            "InstanceType":"t2.medium"
         }
      },
      "monitoringSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Monitoring Security Group",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Ref":"myStack"
                           },
                           "Monitoring-sggroup"
                        ]
                     ]
                  }
               }
            ],
            "VpcId":{
               "Ref":"myVPC"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"3000",
                  "ToPort":"3000",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"3000",
                  "ToPort":"3000",
                  "CidrIpv6":"::/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"8086",
                  "ToPort":"8086",
                  "CidrIpv6":"::/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"8086",
                  "ToPort":"8086",
                  "CidrIp":"0.0.0.0/0"
               }
            ]
         }
      }
   },
   "Outputs":{
      "OpsWorksStackARN":{
         "Value":{
            "Ref":"myStack"
         },
         "Description":"ARN of OpsWorks stack that is created."
      },
      "DefaultVPCSecurityGroup":{
         "Value":{
            "Fn::GetAtt":[
               "myVPC",
               "DefaultSecurityGroup"
            ]
         },
         "Description":"Default VPC security group name."
      },
      "WordpressInstancePublicIP":{
         "Value":{
            "Fn::GetAtt":[
               "wordpressInstance",
               "PublicIp"
            ]
         },
         "Description":"Public Ip of the instance created."
      },
      "OpsWorksStackName":{
         "Value":{
            "Ref":"AWS::StackName"
         },
         "Description":"Name of Stack that is created."
      }
   }
}
